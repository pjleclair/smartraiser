{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateInputWidth = exports.measureText = exports.getFontShorthand = void 0;\nvar allowedVariants = ['normal', 'small-caps'];\n/**\n * Gets font CSS shorthand property given element.\n *\n * @param {HTMLElement} element Element to get font CSS shorthand property from\n */\nfunction getFontShorthand(element) {\n  if (!element) {\n    return '';\n  }\n  var style = window.getComputedStyle(element);\n  if (style.font) {\n    return style.font;\n  }\n  var isFontDefined = style.fontFamily !== '';\n  if (!isFontDefined) {\n    return '';\n  }\n  var fontVariant = allowedVariants.includes(style.fontVariant) ? style.fontVariant : 'normal';\n  return \"\".concat(style.fontStyle, \" \").concat(fontVariant, \" \").concat(style.fontWeight, \" \").concat(style.fontSize, \" / \").concat(style.lineHeight, \" \").concat(style.fontFamily);\n}\nexports.getFontShorthand = getFontShorthand;\nvar cachedCanvas;\n/**\n * Measures text width given text and font CSS shorthand.\n *\n * @param {string} text Text to measure\n * @param {string} font Font to use when measuring the text\n */\nfunction measureText(text, font) {\n  var canvas = cachedCanvas || (cachedCanvas = document.createElement('canvas'));\n  var context = canvas.getContext('2d');\n  // Context type not supported\n  if (!context) {\n    return null;\n  }\n  context.font = font;\n  var width = context.measureText(text).width;\n  return Math.ceil(width);\n}\nexports.measureText = measureText;\n/**\n * Updates input element width to fit its content given input element\n * @param {HTMLInputElement} element\n */\nfunction updateInputWidth(element) {\n  if (typeof document === 'undefined' || !element) {\n    return null;\n  }\n  var font = getFontShorthand(element);\n  var text = element.value || element.placeholder;\n  var width = measureText(text, font);\n  if (width === null) {\n    return null;\n  }\n  element.style.width = \"\".concat(width, \"px\");\n  return width;\n}\nexports.updateInputWidth = updateInputWidth;\nexports.default = updateInputWidth;","map":{"version":3,"names":["Object","defineProperty","exports","value","updateInputWidth","measureText","getFontShorthand","allowedVariants","element","style","window","getComputedStyle","font","isFontDefined","fontFamily","fontVariant","includes","concat","fontStyle","fontWeight","fontSize","lineHeight","cachedCanvas","text","canvas","document","createElement","context","getContext","width","Math","ceil","placeholder","default"],"sources":["/Users/Phillip/repos/smartraiser/frontend/node_modules/update-input-width/dist/cjs/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.updateInputWidth = exports.measureText = exports.getFontShorthand = void 0;\nvar allowedVariants = ['normal', 'small-caps'];\n/**\n * Gets font CSS shorthand property given element.\n *\n * @param {HTMLElement} element Element to get font CSS shorthand property from\n */\nfunction getFontShorthand(element) {\n    if (!element) {\n        return '';\n    }\n    var style = window.getComputedStyle(element);\n    if (style.font) {\n        return style.font;\n    }\n    var isFontDefined = style.fontFamily !== '';\n    if (!isFontDefined) {\n        return '';\n    }\n    var fontVariant = allowedVariants.includes(style.fontVariant) ? style.fontVariant : 'normal';\n    return \"\".concat(style.fontStyle, \" \").concat(fontVariant, \" \").concat(style.fontWeight, \" \").concat(style.fontSize, \" / \").concat(style.lineHeight, \" \").concat(style.fontFamily);\n}\nexports.getFontShorthand = getFontShorthand;\nvar cachedCanvas;\n/**\n * Measures text width given text and font CSS shorthand.\n *\n * @param {string} text Text to measure\n * @param {string} font Font to use when measuring the text\n */\nfunction measureText(text, font) {\n    var canvas = cachedCanvas || (cachedCanvas = document.createElement('canvas'));\n    var context = canvas.getContext('2d');\n    // Context type not supported\n    if (!context) {\n        return null;\n    }\n    context.font = font;\n    var width = context.measureText(text).width;\n    return Math.ceil(width);\n}\nexports.measureText = measureText;\n/**\n * Updates input element width to fit its content given input element\n * @param {HTMLInputElement} element\n */\nfunction updateInputWidth(element) {\n    if (typeof document === 'undefined' || !element) {\n        return null;\n    }\n    var font = getFontShorthand(element);\n    var text = element.value || element.placeholder;\n    var width = measureText(text, font);\n    if (width === null) {\n        return null;\n    }\n    element.style.width = \"\".concat(width, \"px\");\n    return width;\n}\nexports.updateInputWidth = updateInputWidth;\nexports.default = updateInputWidth;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,gBAAgB,GAAGF,OAAO,CAACG,WAAW,GAAGH,OAAO,CAACI,gBAAgB,GAAG,KAAK,CAAC;AAClF,IAAIC,eAAe,GAAG,CAAC,QAAQ,EAAE,YAAY,CAAC;AAC9C;AACA;AACA;AACA;AACA;AACA,SAASD,gBAAgBA,CAACE,OAAO,EAAE;EAC/B,IAAI,CAACA,OAAO,EAAE;IACV,OAAO,EAAE;EACb;EACA,IAAIC,KAAK,GAAGC,MAAM,CAACC,gBAAgB,CAACH,OAAO,CAAC;EAC5C,IAAIC,KAAK,CAACG,IAAI,EAAE;IACZ,OAAOH,KAAK,CAACG,IAAI;EACrB;EACA,IAAIC,aAAa,GAAGJ,KAAK,CAACK,UAAU,KAAK,EAAE;EAC3C,IAAI,CAACD,aAAa,EAAE;IAChB,OAAO,EAAE;EACb;EACA,IAAIE,WAAW,GAAGR,eAAe,CAACS,QAAQ,CAACP,KAAK,CAACM,WAAW,CAAC,GAAGN,KAAK,CAACM,WAAW,GAAG,QAAQ;EAC5F,OAAO,EAAE,CAACE,MAAM,CAACR,KAAK,CAACS,SAAS,EAAE,GAAG,CAAC,CAACD,MAAM,CAACF,WAAW,EAAE,GAAG,CAAC,CAACE,MAAM,CAACR,KAAK,CAACU,UAAU,EAAE,GAAG,CAAC,CAACF,MAAM,CAACR,KAAK,CAACW,QAAQ,EAAE,KAAK,CAAC,CAACH,MAAM,CAACR,KAAK,CAACY,UAAU,EAAE,GAAG,CAAC,CAACJ,MAAM,CAACR,KAAK,CAACK,UAAU,CAAC;AACtL;AACAZ,OAAO,CAACI,gBAAgB,GAAGA,gBAAgB;AAC3C,IAAIgB,YAAY;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAASjB,WAAWA,CAACkB,IAAI,EAAEX,IAAI,EAAE;EAC7B,IAAIY,MAAM,GAAGF,YAAY,KAAKA,YAAY,GAAGG,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CAAC;EAC9E,IAAIC,OAAO,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;EACrC;EACA,IAAI,CAACD,OAAO,EAAE;IACV,OAAO,IAAI;EACf;EACAA,OAAO,CAACf,IAAI,GAAGA,IAAI;EACnB,IAAIiB,KAAK,GAAGF,OAAO,CAACtB,WAAW,CAACkB,IAAI,CAAC,CAACM,KAAK;EAC3C,OAAOC,IAAI,CAACC,IAAI,CAACF,KAAK,CAAC;AAC3B;AACA3B,OAAO,CAACG,WAAW,GAAGA,WAAW;AACjC;AACA;AACA;AACA;AACA,SAASD,gBAAgBA,CAACI,OAAO,EAAE;EAC/B,IAAI,OAAOiB,QAAQ,KAAK,WAAW,IAAI,CAACjB,OAAO,EAAE;IAC7C,OAAO,IAAI;EACf;EACA,IAAII,IAAI,GAAGN,gBAAgB,CAACE,OAAO,CAAC;EACpC,IAAIe,IAAI,GAAGf,OAAO,CAACL,KAAK,IAAIK,OAAO,CAACwB,WAAW;EAC/C,IAAIH,KAAK,GAAGxB,WAAW,CAACkB,IAAI,EAAEX,IAAI,CAAC;EACnC,IAAIiB,KAAK,KAAK,IAAI,EAAE;IAChB,OAAO,IAAI;EACf;EACArB,OAAO,CAACC,KAAK,CAACoB,KAAK,GAAG,EAAE,CAACZ,MAAM,CAACY,KAAK,EAAE,IAAI,CAAC;EAC5C,OAAOA,KAAK;AAChB;AACA3B,OAAO,CAACE,gBAAgB,GAAGA,gBAAgB;AAC3CF,OAAO,CAAC+B,OAAO,GAAG7B,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}